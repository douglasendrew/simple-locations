name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/location/create
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create Location'
      description: 'Create a new location based on informations of request'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Nome do local desejado.'
        required: true
        example: 'Praça da Cidade'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      slug:
        name: slug
        description: 'Slug que deseja atribuir a esse local.'
        required: true
        example: praca-da-cidade
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      city:
        name: city
        description: 'Cidade em que o local está.'
        required: true
        example: Biriui
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      state:
        name: state
        description: 'Estado em que o local está localizado.'
        required: true
        example: 'São Paulo'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      name: 'Praça da Cidade'
      slug: praca-da-cidade
      city: Biriui
      state: 'São Paulo'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":"Location created successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '59'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/location/edit/{location_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Edit Location'
      description: 'Edit a location based on informations of request'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      location_id:
        name: location_id
        description: 'ID do local que deseja editar.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      location_id: 3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Nome do local desejado.'
        required: true
        example: 'Bairro da Cidade'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      slug:
        name: slug
        description: 'Slug que deseja atribuir a esse local.'
        required: true
        example: praca-da-cidade
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      city:
        name: city
        description: 'Cidade em que o local está.'
        required: true
        example: 'São Paulo'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      state:
        name: state
        description: 'Estado em que o local está localizado.'
        required: true
        example: 'São Paulo'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      name: 'Bairro da Cidade'
      slug: praca-da-cidade
      city: 'São Paulo'
      state: 'São Paulo'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":"Location edited successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '58'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/location/search/{location_term}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Search Location'
      description: 'Get locations based on serach term informed on param'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      location_term:
        name: location_term
        description: 'Termo que deseja pesquisa dentre todos locais cadastrados.'
        required: true
        example: Praça
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      location_term: Praça
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":"Locations getted successfully","total":0,"data":[]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '57'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/location/all
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get All locations'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":"Locations getted successfully","total":2,"data":[{"id":3,"name":"Shopping da Cidade","slug":"shopping-da-cidade","city":"Rio de Janeiro","state":"Rio de Janeiro","created_at":"2023-11-23T17:23:54.000000Z","updated_at":"2023-11-23T17:43:31.000000Z"},{"id":5,"name":"Centro Esportivo","slug":"centro-esportivo","city":"S\u00e3o Paulo","state":"S\u00e3o Paulo","created_at":"2023-11-23T17:45:50.000000Z","updated_at":"2023-11-23T17:45:50.000000Z"}]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '56'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/location/delete/{location_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Location'
      description: 'Delete a specific location information on param'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      location_id:
        name: location_id
        description: 'ID do local que deseja deletar.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      location_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
